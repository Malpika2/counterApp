{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","categorie","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACI,uBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAM,OAAOP,GAAP,mBAAqBO,OAC1CN,EAAc,MAIlB,UACI,8CAEA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,c,+BCRnBG,EAAO,uCAAG,WAASC,GAAT,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAThB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACA,sBAAKc,UAAU,0CAAf,UACI,qBACIC,IAAKf,EACLgB,IAAKN,IAET,uBACCA,MCPIO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDV,SAAEA,GAAgB,IAAD,EAEhBd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJ8B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAkB1C,OAXAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IACGqB,EDfyBK,CAAa1B,GAAhCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,qCACI,6BAAKpB,IACDoB,GAAW,wCACf,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEQtBgB,EArBc,WAAQ,IAAD,EAEIzC,mBAAS,CAAC,aAFd,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAIhC,OACI,qCACI,+CACA,cAAC,EAAD,CACIA,cAAiBA,IAErB,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAoB,GAAS,OACrB,cAAC,EAAD,CAAyB7B,SAAU6B,GAArBA,YCXtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6eba5ac0.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if( inputValue.trim().length>0){\n            setCategories( categs  => [ inputValue,...categs] );\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit= {handleSubmit}>\n            <h2>Add category</h2>\n\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async  ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=05g92eJAXP40YysnMuuepOe43G0QfX2E`;\n    \n    const resp = await fetch(url);\n    const {data} = await resp.json(); \n    const gifs = data.map( (img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized.url\n        }\n    })\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n    <div className=\"card animate__animated animate__fadeIn \">\n        <img\n            src={url}\n            alt={title}\n        />\n        <br/>\n        {title}\n    </div>\n    )\n}","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {   loading && <p>Loading</p> }\n            <div className=\"card-grid\">\n                { \n                    images.map( (img) => \n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ) \n                }\n            </div>\n        </>\n    );\n}\n","import {useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const  useFetchGifs = ( category ) =>  {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading:true\n    });\n\n    useEffect( () => {\n\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            });\n\n    }, [category]);\n    return state;\n}\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\nexport const  GifExpertApp = () =>  {\n\n    const [categories, setCategories] = useState(['One Puch'])\n\n    return (\n        <>\n            <h2> GifExpertApp</h2>\n            <AddCategory \n                setCategories = {setCategories}\n            />\n            <hr />\n            <ol>\n                {\n                    categories.map( categorie => \n                        <GifGrid key={categorie} category={categorie} />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}